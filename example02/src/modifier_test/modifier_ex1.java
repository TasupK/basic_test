package modifier_test;

public class modifier_ex1 {
/* 캡슐화와 정보은닉
 * 
 * 접근 제어자
 * public, private, protected, (default)
 * 제어자
 * static, final, abstract, native, transient, syncronized, volatile, strictfp
 * 
 * ~ 하나의 대상에 여러 제어자를 같이 사용가능(접근 제어자는 하나만)
 * 
 * static 클래스의 공통적인
 * 붙을 수 있는 곳은 메소드, 멤버변수
 * 
 * 멤버변수에 붙는 경우에는 모든 인스턴스에 사용될 수 있는 멤버변수가 된다.
 * 이 경우에는 고정적인 변수가 된다는 의미
 * 인스턴스를 사용하지 않아도 사용이 가능하다.
 * 클래스가 메모리에 로드될 때 생성된다.
 * 
 * 인스턴스를 생성하지 않고도 호출이 가능하다.
 * static 메소드 안에서는 멤버변수를 호출하지 못한다. (지역변수만 가능하다.)
 * 
 * 인스턴스 메소드는 생성자를 통해 호출한다. 생성자가 호출될 때 메모리에 로드된다.
 * static 메소드는 직접 클래스를 통해 호출한다. 클래스가 메모리에 로드 될 때 함께 생성된다.
 * 
 * 
 * static 과 final을 함께 사용하는 이유
 * 이러한 클래스 상수는 공통으로 사용되는 경우가 많아서, static과 final을 함께 사용하는 경우가 많다.
 * 
 * 
 * 
 */
	
}

